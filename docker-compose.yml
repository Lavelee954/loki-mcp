services:
  loki-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: loki-mcp-server:latest
    container_name: loki-mcp-server
    # Expose unified MCP server port
    ports:
      - "8080:8080"
    # If you need to pass environment variables
    environment:
      - LOKI_URL=http://loki:3100
      - PORT=8080
    depends_on:
      loki:
        condition: service_healthy

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3100/ready || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki

  # Add Promtail to collect and forward logs to Loki
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  # Simple log generator
  log-generator:
    image: alpine:latest
    container_name: log-generator
    command: >
      /bin/sh -c "
        while true; do
          echo \"INFO: This is a sample log message at \$$(date)\"
          if [ \$$((RANDOM % 10)) -eq 0 ]; then
            echo \"ERROR: This is a sample error message at \$$(date)\"
          fi
          sleep 5
        done
      "

volumes:
  loki_data:
  grafana_data:
